package com.arriendosreal.webapp.entities;

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.NamedStoredProcedureQuery;
import javax.persistence.OneToMany;
import javax.persistence.ParameterMode;
import javax.persistence.StoredProcedureParameter;
import javax.persistence.Table;

/**
 * Departmentos generated by hbm2java
 */
@Entity
@Table(name = "DEPARTMENTOS")
@NamedStoredProcedureQuery(name = "Departmentos.createDepartmento", procedureName = "SP_CREAR_DEPARTAMENTO", parameters = {
        @StoredProcedureParameter(mode = ParameterMode.IN, name = "in_nombre", type = String.class),
        @StoredProcedureParameter(mode = ParameterMode.IN, name = "in_direccion", type = String.class),
        @StoredProcedureParameter(mode = ParameterMode.IN, name = "in_region", type = String.class),
        @StoredProcedureParameter(mode = ParameterMode.IN, name = "in_ciudad", type = String.class),
        @StoredProcedureParameter(mode = ParameterMode.IN, name = "in_precio", type = Integer.class),
        @StoredProcedureParameter(mode = ParameterMode.IN, name = "in_disponibilidad", type = Character.class),
        @StoredProcedureParameter(mode = ParameterMode.OUT, name = "out_resultado", type = Integer.class) })

@NamedStoredProcedureQuery(name = "Departmentos.deleteDepartmento", procedureName = "SP_DEL_DEPARTAMENTO", parameters = {
        @StoredProcedureParameter(mode = ParameterMode.IN, name = "in_id_departamento", type = Integer.class),
        @StoredProcedureParameter(mode = ParameterMode.OUT, name = "out_estado", type = Integer.class) })

@NamedStoredProcedureQuery(name = "Departmentos.updateDepartmento", procedureName = "SP_UPD_DEPARTAMENTO", parameters = {
        @StoredProcedureParameter(mode = ParameterMode.IN, name = "in_id_departamento", type = Integer.class),
        @StoredProcedureParameter(mode = ParameterMode.IN, name = "in_nombre", type = String.class),
        @StoredProcedureParameter(mode = ParameterMode.IN, name = "in_direccion", type = String.class),
        @StoredProcedureParameter(mode = ParameterMode.IN, name = "in_region", type = String.class),
        @StoredProcedureParameter(mode = ParameterMode.IN, name = "in_ciudad", type = String.class),
        @StoredProcedureParameter(mode = ParameterMode.IN, name = "in_precio", type = Integer.class),
        @StoredProcedureParameter(mode = ParameterMode.IN, name = "in_disponibilidad", type = Boolean.class),
        @StoredProcedureParameter(mode = ParameterMode.OUT, name = "out_resultado", type = Integer.class) })

public class Departmentos implements java.io.Serializable {

    private BigDecimal idDepartmento;
    private String nombre;
    private String direccion;
    private String region;
    private String ciudad;
    private BigDecimal precio;
    private BigDecimal disponibilidad;
    private Set<Mantenciones> mantencioneses = new HashSet<Mantenciones>(0);
    private Set<Reservas> reservases = new HashSet<Reservas>(0);
    private Set<Servicios> servicioses = new HashSet<Servicios>(0);
    private Set<Inventarios> inventarioses = new HashSet<Inventarios>(0);

    public Departmentos() {
    }

    public Departmentos(BigDecimal idDepartmento, String nombre) {
        this.idDepartmento = idDepartmento;
        this.nombre = nombre;
    }

    public Departmentos(BigDecimal idDepartmento, String nombre, String direccion, String region, String ciudad,
            BigDecimal precio, BigDecimal disponibilidad, Set<Mantenciones> mantencioneses, Set<Reservas> reservases,
            Set<Servicios> servicioses, Set<Inventarios> inventarioses) {
        this.idDepartmento = idDepartmento;
        this.nombre = nombre;
        this.direccion = direccion;
        this.region = region;
        this.ciudad = ciudad;
        this.precio = precio;
        this.disponibilidad = disponibilidad;
        this.mantencioneses = mantencioneses;
        this.reservases = reservases;
        this.servicioses = servicioses;
        this.inventarioses = inventarioses;
    }

    @Id

    @Column(name = "ID_DEPARTMENTO", unique = true, nullable = false, precision = 22, scale = 0)
    public BigDecimal getIdDepartmento() {
        return this.idDepartmento;
    }

    public void setIdDepartmento(BigDecimal idDepartmento) {
        this.idDepartmento = idDepartmento;
    }

    @Column(name = "NOMBRE", nullable = false, length = 50)
    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    @Column(name = "DIRECCION", length = 100)
    public String getDireccion() {
        return this.direccion;
    }

    public void setDireccion(String direccion) {
        this.direccion = direccion;
    }

    @Column(name = "REGION", length = 50)
    public String getRegion() {
        return this.region;
    }

    public void setRegion(String region) {
        this.region = region;
    }

    @Column(name = "CIUDAD", length = 50)
    public String getCiudad() {
        return this.ciudad;
    }

    public void setCiudad(String ciudad) {
        this.ciudad = ciudad;
    }

    @Column(name = "PRECIO", precision = 22, scale = 0)
    public BigDecimal getPrecio() {
        return this.precio;
    }

    public void setPrecio(BigDecimal precio) {
        this.precio = precio;
    }

    @Column(name = "DISPONIBILIDAD", precision = 22, scale = 0)
    public BigDecimal getDisponibilidad() {
        return this.disponibilidad;
    }

    public void setDisponibilidad(BigDecimal disponibilidad) {
        this.disponibilidad = disponibilidad;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "departmentos")
    public Set<Mantenciones> getMantencioneses() {
        return this.mantencioneses;
    }

    public void setMantencioneses(Set<Mantenciones> mantencioneses) {
        this.mantencioneses = mantencioneses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "departmentos")
    public Set<Reservas> getReservases() {
        return this.reservases;
    }

    public void setReservases(Set<Reservas> reservases) {
        this.reservases = reservases;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "departmentos")
    public Set<Servicios> getServicioses() {
        return this.servicioses;
    }

    public void setServicioses(Set<Servicios> servicioses) {
        this.servicioses = servicioses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "departmentos")
    public Set<Inventarios> getInventarioses() {
        return this.inventarioses;
    }

    public void setInventarioses(Set<Inventarios> inventarioses) {
        this.inventarioses = inventarioses;
    }

}
